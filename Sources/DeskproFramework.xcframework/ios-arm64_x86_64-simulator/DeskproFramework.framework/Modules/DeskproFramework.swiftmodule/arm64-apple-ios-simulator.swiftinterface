// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name DeskproFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import DeskproFramework
import Foundation
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
public class DeskPro {
  public init(messengerConfig: DeskproFramework.MessengerConfig, containingViewController: UIKit.UIViewController)
  public func test() -> Swift.String
  public func setUserInfo(user: DeskproFramework.User)
  public func forgetUser() -> Swift.Bool
  public func setPushRegistrationToken(token: Swift.String) -> Swift.Bool
  public func isDeskProPushNotification(pushNotification: DeskproFramework.PushNotificationData) -> Swift.Bool
  public func handlePushNotification(pushNotification: DeskproFramework.PushNotificationData)
  public func present() -> DeskproFramework.PresentBuilder
  public func close()
  public func getUnreadConversationCount() -> Swift.Int
  public func enableLogging()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class DeskproButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public init(size: CoreFoundation.CGFloat = 56)
  @_Concurrency.MainActor(unsafe) public func setImage(named imageName: Swift.String, color: UIKit.UIColor? = nil)
  @_Concurrency.MainActor(unsafe) public func setColor(_ color: UIKit.UIColor)
  @_Concurrency.MainActor(unsafe) public func setPosition(_ position: DeskproFramework.DeskproButton.ButtonPosition, inView view: UIKit.UIView, x: CoreFoundation.CGFloat = 16, y: CoreFoundation.CGFloat = 16)
  public enum ButtonPosition {
    case topLeft, topRight, bottomLeft, bottomRight
    case custom(CoreFoundation.CGPoint)
  }
  @objc deinit
}
public class PresentCoordinator {
  public init(containingViewController: UIKit.UIViewController)
  @objc deinit
}
public class User : Swift.Codable {
  public var name: Swift.String?
  public var firstName: Swift.String?
  public var lastName: Swift.String?
  public var email: Swift.String?
  public init(name: Swift.String? = nil, firstName: Swift.String? = nil, lastName: Swift.String? = nil, email: Swift.String? = nil)
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public class PresentBuilder {
  public var url: Swift.String
  public init(url: Swift.String, appId: Swift.String, coordinator: DeskproFramework.PresentCoordinator)
  public func chatHistory(_ chatId: Swift.Int) -> DeskproFramework.PresentBuilder
  public func article(_ articleId: Swift.Int) -> DeskproFramework.PresentBuilder
  public func comments() -> DeskproFramework.PresentBuilder
  public func show()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class PushNotificationData {
  @objc deinit
}
public class MessengerConfig {
  public var appUrl: Swift.String
  public var appId: Swift.String
  public var appKey: Swift.String?
  public init(appUrl: Swift.String, appId: Swift.String, appKey: Swift.String? = nil)
  @objc deinit
}
